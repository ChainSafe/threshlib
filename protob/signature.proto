// Copyright Â© 2019 Binance
//
// This file is part of Binance. The full Binance copyright notice, including
// terms governing use, modification, and redistribution, is contained in the
// file LICENSE at the root of the source code distribution tree.

syntax = "proto3";

option go_package = "./common";

/*
 * State object for signatures, either partial (for offline/async "one round" signing) or full (contains the final signature).
 */
message SignatureData {
    message OneRoundData {
        // Components to produce s = sum(s_i)
        bytes k_i = 1;
        bytes sigma_i = 2;
        bytes big_r_x = 3;

        // Components for identifiable aborts during the final phase
        bytes big_r_y = 4;
        bytes big_r_bar_i_x = 5;
        bytes big_r_bar_i_y = 6;
        bytes big_s_i_x = 7;
        bytes big_s_i_y = 8;
    }
    OneRoundData one_round_data = 6;

    bytes signature = 1;

    // Ethereum-style recovery byte; only the first byte is relevant
    bytes signature_recovery = 2;

    // Signature components R, S
    bytes r = 3;
    bytes s = 4;

    // M represents the original message digest that was signed M
    bytes m = 5;
}
